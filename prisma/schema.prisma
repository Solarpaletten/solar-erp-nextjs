generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                             Int                 @id @default(autoincrement())
  username                       String              @unique @db.VarChar(50)
  email                          String              @unique @db.VarChar(100)
  password_hash                  String              @db.VarChar(255)
  first_name                     String?             @db.VarChar(50)
  last_name                      String?             @db.VarChar(50)
  phone                          String?             @db.VarChar(20)
  role                           UserRole            @default(USER)
  status                         String              @default("active") @db.VarChar(20)
  is_active                      Boolean             @default(true)
  email_verified                 Boolean             @default(false)
  email_verified_at              DateTime?
  verification_token             String?             @unique @db.VarChar(255)
  reset_token                    String?             @unique @db.VarChar(255)
  reset_token_expires            DateTime?
  onboarding_completed           Boolean             @default(false)
  current_company_id             Int?
  created_at                     DateTime            @default(now())
  updated_at                     DateTime            @updatedAt
  last_login_at                  DateTime?
  bank_operations                bank_operations[]
  chart_of_accounts              chart_of_accounts[]
  address_responsibilities       client_addresses[]  @relation("AddressEmployee")
  created_clients                clients[]           @relation("ClientCreator")
  owned_companies                companies[]         @relation("CompanyOwner")
  company_memberships            company_users[]
  created_products               products[]          @relation("ProductCreator")
  purchase_item_responsibilities purchase_items[]    @relation("PurchaseItemEmployee")
  created_purchases              purchases[]         @relation("PurchaseCreator")
  managed_purchases              purchases[]         @relation("PurchaseManager")
  modified_purchases             purchases[]         @relation("PurchaseModifier")
  created_sales                  sales[]             @relation("SaleCreator")
  managed_sales                  sales[]             @relation("SalesManager")
  modified_sales                 sales[]             @relation("SaleModifier")
  created_warehouses             warehouses[]        @relation("WarehouseCreator")
  responsible_warehouses         warehouses[]        @relation("WarehouseResponsible")

  @@index([email])
  @@index([username])
  @@index([role])
  @@index([is_active])
  @@index([current_company_id])
}

model companies {
  id                  Int                   @id @default(autoincrement())
  code                String                @unique @db.VarChar(20)
  name                String                @db.VarChar(100)
  short_name          String?               @db.VarChar(50)
  description         String?
  email               String?               @db.VarChar(100)
  phone               String?               @db.VarChar(20)
  website             String?               @db.VarChar(200)
  legal_entity_type   String                @db.VarChar(50)
  registration_number String?               @db.VarChar(50)
  vat_number          String?               @db.VarChar(50)
  legal_address       String?
  actual_address      String?
  tax_country         String                @default("UAE") @db.VarChar(3)
  base_currency       Currency              @default(AED)
  owner_id            Int
  director_name       String                @db.VarChar(100)
  is_active           Boolean               @default(true)
  setup_completed     Boolean               @default(false)
  email_verified      Boolean               @default(false)
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  bank_operations     bank_operations[]
  chart_of_accounts   chart_of_accounts[]
  clients             clients[]
  owner               users                 @relation("CompanyOwner", fields: [owner_id], references: [id])
  employees           company_users[]
  cost_centers        cost_centers[]
  products            products[]
  purchases           purchases[]
  sales               sales[]
  vat_classifications vat_classifications[]
  warehouses          warehouses[]

  @@index([owner_id])
  @@index([code])
  @@index([name])
  @@index([is_active])
  @@index([tax_country])
}

model company_users {
  id          Int             @id @default(autoincrement())
  company_id  Int
  user_id     Int
  role        CompanyUserRole @default(EMPLOYEE)
  permissions String[]        @default([])
  is_active   Boolean         @default(true)
  joined_at   DateTime        @default(now())
  updated_at  DateTime        @updatedAt
  company     companies       @relation(fields: [company_id], references: [id], onDelete: Cascade)
  user        users           @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([company_id, user_id])
  @@index([company_id])
  @@index([user_id])
  @@index([role])
}

model clients {
  id                      Int                    @id @default(autoincrement())
  company_id              Int
  name                    String                 @db.VarChar(200)
  abbreviation            String?                @db.VarChar(100)
  code                    String?                @db.VarChar(50)
  email                   String                 @db.VarChar(100)
  phone                   String?                @db.VarChar(20)
  fax                     String?                @db.VarChar(20)
  website                 String?                @db.VarChar(200)
  contact_information     String?
  role                    ClientRole             @default(CLIENT)
  is_juridical            Boolean                @default(true)
  is_active               Boolean                @default(true)
  is_foreigner            Boolean                @default(false)
  country                 String?                @db.VarChar(100)
  legal_address           String?
  actual_address          String?
  business_license_code   String?                @db.VarChar(50)
  vat_code                String?                @db.VarChar(50)
  vat_rate                Decimal?               @db.Decimal(5, 2)
  eori_code               String?                @db.VarChar(50)
  foreign_taxpayer_code   String?                @db.VarChar(50)
  registration_number     String?                @db.VarChar(50)
  credit_sum              Decimal?               @default(0) @db.Decimal(15, 2)
  pay_per                 String?                @db.VarChar(50)
  currency                Currency               @default(EUR)
  payment_terms           String?                @db.VarChar(100)
  automatic_debt_reminder Boolean?               @default(false)
  registration_date       DateTime?              @db.Date
  date_of_birth           DateTime?              @db.Date
  sabis_customer_name     String?                @db.VarChar(200)
  sabis_customer_code     String?                @db.VarChar(50)
  additional_information  String?
  notes                   String?
  created_by              Int
  created_at              DateTime               @default(now())
  updated_at              DateTime               @updatedAt
  bank_operations         bank_operations[]
  addresses               client_addresses[]
  bank_accounts           client_bank_accounts[]
  company                 companies              @relation(fields: [company_id], references: [id], onDelete: Cascade)
  creator                 users                  @relation("ClientCreator", fields: [created_by], references: [id])
  purchases               purchases[]
  sales                   sales[]
  warehouses              warehouses[]

  @@unique([company_id, code])
  @@unique([company_id, vat_code])
  @@index([company_id])
  @@index([role])
  @@index([is_active])
  @@index([country])
  @@index([created_by])
}

model client_addresses {
  id                Int      @id @default(autoincrement())
  client_id         Int
  address           String?  @db.VarChar(255)
  city              String?  @db.VarChar(100)
  country           String   @db.VarChar(100)
  postcode          String?  @db.VarChar(20)
  employee_id       Int?
  is_registration   Boolean  @default(false)
  is_correspondence Boolean  @default(false)
  is_load           Boolean  @default(false)
  is_unload         Boolean  @default(false)
  is_department     Boolean  @default(false)
  name              String?  @db.VarChar(100)
  description       String?
  notes             String?
  is_active         Boolean  @default(true)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  client            clients  @relation(fields: [client_id], references: [id], onDelete: Cascade)
  employee          users?   @relation("AddressEmployee", fields: [employee_id], references: [id])

  @@index([client_id])
  @@index([country])
  @@index([is_correspondence])
}

model client_bank_accounts {
  id             Int      @id @default(autoincrement())
  client_id      Int
  account_number String   @db.VarChar(50)
  bank_name      String   @db.VarChar(100)
  bank_code      String?  @db.VarChar(20)
  swift_code     String?  @db.VarChar(20)
  iban           String?  @db.VarChar(50)
  currency       Currency @default(EUR)
  is_primary     Boolean  @default(false)
  is_active      Boolean  @default(true)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  client         clients  @relation(fields: [client_id], references: [id], onDelete: Cascade)

  @@unique([client_id, account_number])
  @@index([client_id])
  @@index([is_primary])
}

model products {
  id             Int              @id @default(autoincrement())
  company_id     Int
  code           String           @db.VarChar(50)
  name           String           @db.VarChar(255)
  description    String?
  unit           String           @db.VarChar(20)
  price          Decimal          @db.Decimal(10, 2)
  cost_price     Decimal?         @db.Decimal(10, 2)
  currency       Currency         @default(EUR)
  vat_rate       Decimal?         @db.Decimal(5, 2)
  category       String?          @db.VarChar(100)
  subcategory    String?          @db.VarChar(100)
  min_stock      Decimal?         @db.Decimal(10, 2)
  current_stock  Decimal?         @db.Decimal(10, 2)
  is_active      Boolean          @default(true)
  is_service     Boolean          @default(false)
  created_by     Int
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  company        companies        @relation(fields: [company_id], references: [id], onDelete: Cascade)
  creator        users            @relation("ProductCreator", fields: [created_by], references: [id])
  purchase_items purchase_items[]
  sale_items     sale_items[]

  @@unique([company_id, code])
  @@index([company_id])
  @@index([is_active])
}

model sales {
  id               Int               @id @default(autoincrement())
  company_id       Int
  document_number  String            @db.VarChar(50)
  document_date    DateTime          @db.Date
  document_type    SalesDocumentType @default(INVOICE)
  delivery_date    DateTime?         @db.Date
  due_date         DateTime?         @db.Date
  client_id        Int
  warehouse_id     Int?
  sales_manager_id Int?
  subtotal         Decimal           @db.Decimal(15, 2)
  vat_amount       Decimal           @default(0) @db.Decimal(15, 2)
  discount_amount  Decimal           @default(0) @db.Decimal(15, 2)
  total_amount     Decimal           @db.Decimal(15, 2)
  currency         Currency          @default(EUR)
  payment_status   PaymentStatus     @default(PENDING)
  delivery_status  DeliveryStatus    @default(PENDING)
  document_status  DocumentStatus    @default(DRAFT)
  created_by       Int
  created_at       DateTime          @default(now())
  updated_by       Int?
  updated_at       DateTime          @updatedAt
  items            sale_items[]
  client           clients           @relation(fields: [client_id], references: [id])
  company          companies         @relation(fields: [company_id], references: [id], onDelete: Cascade)
  creator          users             @relation("SaleCreator", fields: [created_by], references: [id])
  sales_manager    users?            @relation("SalesManager", fields: [sales_manager_id], references: [id])
  modifier         users?            @relation("SaleModifier", fields: [updated_by], references: [id])
  warehouse        warehouses?       @relation(fields: [warehouse_id], references: [id])

  @@unique([company_id, document_number])
  @@index([company_id])
  @@index([document_date])
  @@index([client_id])
  @@index([payment_status])
}

model sale_items {
  id               Int      @id @default(autoincrement())
  sale_id          Int
  product_id       Int
  line_number      Int?
  quantity         Decimal  @db.Decimal(10, 3)
  unit_price_base  Decimal  @db.Decimal(10, 2)
  discount_percent Decimal? @default(0) @db.Decimal(5, 2)
  total_discount   Decimal? @default(0) @db.Decimal(15, 2)
  vat_rate         Decimal? @db.Decimal(5, 2)
  vat_amount       Decimal? @db.Decimal(15, 2)
  line_total       Decimal  @db.Decimal(15, 2)
  description      String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  product          products @relation(fields: [product_id], references: [id])
  sale             sales    @relation(fields: [sale_id], references: [id], onDelete: Cascade)

  @@index([sale_id])
  @@index([product_id])
}

model purchases {
  id                  Int                   @id @default(autoincrement())
  company_id          Int
  document_number     String                @db.VarChar(50)
  document_date       DateTime              @db.Date
  operation_type      PurchaseOperationType @default(PURCHASE)
  supplier_id         Int
  warehouse_id        Int?
  purchase_manager_id Int?
  subtotal            Decimal               @db.Decimal(15, 2)
  vat_amount          Decimal               @default(0) @db.Decimal(15, 2)
  total_amount        Decimal               @db.Decimal(15, 2)
  currency            Currency              @default(EUR)
  payment_status      PaymentStatus         @default(PENDING)
  delivery_status     DeliveryStatus        @default(PENDING)
  document_status     DocumentStatus        @default(DRAFT)
  created_by          Int
  created_at          DateTime              @default(now())
  updated_by          Int?
  updated_at          DateTime              @updatedAt
  items               purchase_items[]
  company             companies             @relation(fields: [company_id], references: [id], onDelete: Cascade)
  creator             users                 @relation("PurchaseCreator", fields: [created_by], references: [id])
  purchase_manager    users?                @relation("PurchaseManager", fields: [purchase_manager_id], references: [id])
  supplier            clients               @relation(fields: [supplier_id], references: [id])
  modifier            users?                @relation("PurchaseModifier", fields: [updated_by], references: [id])
  warehouse           warehouses?           @relation(fields: [warehouse_id], references: [id])

  @@unique([company_id, document_number])
  @@index([company_id])
  @@index([document_date])
  @@index([supplier_id])
}

model purchase_items {
  id          Int       @id @default(autoincrement())
  purchase_id Int
  product_id  Int
  line_number Int?
  quantity    Decimal   @db.Decimal(10, 3)
  unit_price  Decimal   @db.Decimal(10, 2)
  vat_rate    Decimal?  @db.Decimal(5, 2)
  vat_amount  Decimal?  @db.Decimal(15, 2)
  line_total  Decimal   @db.Decimal(15, 2)
  employee_id Int?
  notes       String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  employee    users?    @relation("PurchaseItemEmployee", fields: [employee_id], references: [id])
  product     products  @relation(fields: [product_id], references: [id])
  purchase    purchases @relation(fields: [purchase_id], references: [id], onDelete: Cascade)

  @@index([purchase_id])
  @@index([product_id])
}

model warehouses {
  id          Int             @id @default(autoincrement())
  company_id  Int
  name        String          @db.VarChar(100)
  code        String?         @db.VarChar(20)
  description String?
  address     String?
  manager_id  Int?
  status      WarehouseStatus @default(ACTIVE)
  is_main     Boolean         @default(false)
  created_by  Int
  created_at  DateTime        @default(now())
  updated_at  DateTime        @updatedAt
  clientsId   Int?
  purchases   purchases[]
  sales       sales[]
  clients     clients?        @relation(fields: [clientsId], references: [id])
  company     companies       @relation(fields: [company_id], references: [id], onDelete: Cascade)
  creator     users           @relation("WarehouseCreator", fields: [created_by], references: [id])
  manager     users?          @relation("WarehouseResponsible", fields: [manager_id], references: [id])

  @@unique([company_id, code])
  @@index([company_id])
  @@index([status])
}

model bank_operations {
  id             Int               @id @default(autoincrement())
  company_id     Int
  doc_number     String            @db.VarChar(50)
  operation_date DateTime          @db.Date
  amount         Decimal           @db.Decimal(15, 2)
  currency       Currency          @default(EUR)
  type           BankOperationType
  description    String            @db.VarChar(255)
  client_id      Int?
  created_by     Int
  created_at     DateTime          @default(now())
  updated_at     DateTime          @updatedAt
  client         clients?          @relation(fields: [client_id], references: [id])
  company        companies         @relation(fields: [company_id], references: [id], onDelete: Cascade)
  creator        users             @relation(fields: [created_by], references: [id])

  @@index([company_id])
  @@index([operation_date])
  @@index([type])
}

model chart_of_accounts {
  id           Int       @id @default(autoincrement())
  company_id   Int
  account_code String    @db.VarChar(20)
  account_name String    @db.VarChar(255)
  account_type String    @db.VarChar(50)
  is_active    Boolean   @default(true)
  currency     Currency?
  created_by   Int
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  company      companies @relation(fields: [company_id], references: [id], onDelete: Cascade)
  creator      users     @relation(fields: [created_by], references: [id])

  @@unique([company_id, account_code])
  @@index([company_id])
  @@index([account_type])
}

model vat_classifications {
  id         Int       @id @default(autoincrement())
  company_id Int
  code       String    @db.VarChar(20)
  name       String    @db.VarChar(100)
  vat_rate   Decimal   @db.Decimal(5, 2)
  is_active  Boolean   @default(true)
  company    companies @relation(fields: [company_id], references: [id], onDelete: Cascade)

  @@unique([company_id, code])
  @@index([company_id])
}

model cost_centers {
  id         Int            @id @default(autoincrement())
  company_id Int
  code       String         @db.VarChar(20)
  name       String         @db.VarChar(100)
  parent_id  Int?
  is_active  Boolean        @default(true)
  company    companies      @relation(fields: [company_id], references: [id], onDelete: Cascade)
  parent     cost_centers?  @relation("CostCenterHierarchy", fields: [parent_id], references: [id])
  children   cost_centers[] @relation("CostCenterHierarchy")

  @@unique([company_id, code])
  @@index([company_id])
  @@index([parent_id])
}

model intrastat_codes {
  id        Int     @id @default(autoincrement())
  code_type String  @db.VarChar(20)
  code      String  @db.VarChar(20)
  name      String  @db.VarChar(200)
  is_active Boolean @default(true)

  @@unique([code_type, code])
  @@index([code_type])
}

enum UserRole {
  ADMIN
  USER
}

enum CompanyUserRole {
  OWNER
  ADMIN
  MANAGER
  EMPLOYEE
  VIEWER
}

enum ClientRole {
  CLIENT
  SUPPLIER
  BOTH
}

enum Currency {
  EUR
  USD
  AED
  UAH
  GBP
}

enum DocumentStatus {
  DRAFT
  PENDING
  APPROVED
  COMPLETED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PARTIAL
  PAID
  OVERDUE
  CANCELLED
}

enum DeliveryStatus {
  PENDING
  PARTIAL
  DELIVERED
  IN_TRANSIT
  CANCELLED
}

enum SalesDocumentType {
  QUOTE
  ORDER
  INVOICE
  DELIVERY_NOTE
  RECEIPT
}

enum PurchaseOperationType {
  PURCHASE
  RETURN
  CORRECTION
  TRANSFER
}

enum WarehouseStatus {
  ACTIVE
  INACTIVE
  MAINTENANCE
}

enum BankOperationType {
  INCOME
  EXPENSE
  TRANSFER
}
